

Convert source-formatted files into metadata that you can deploy using Metadata API.

USAGE
  $ sfdx force source convert [--json] [--api-version <value>] [-r <value>] [-d
    <value>] [-n <value>] [-p <value> | -x <value> | -m <value>]

FLAGS
  -d, --output-dir=<value>     [default: metadataPackage_1684336854808] Output
                               directory to store the Metadata API–formatted
                               files in.
  -m, --metadata=<value>...    Metadata component names to convert.
  -n, --package-name=<value>   Name of the package to associate with the
                               metadata-formatted files.
  -p, --source-dir=<value>...  Paths to the local source files to convert.
  -r, --root-dir=<value>       Source directory other than the default package
                               to convert.
  -x, --manifest=<value>       Path to the manifest (package.xml) file that
                               specifies the metadata types to convert.
  --api-version=<value>        API Version to use in the generated project's
                               manifest. By default, will use the version from
                               sfdx-project.json

GLOBAL FLAGS
  --json  Format output as json.

DESCRIPTION
  Convert source-formatted files into metadata that you can deploy using
  Metadata API.

  To convert source-formatted files into the metadata format, so that you can
  deploy them using Metadata API, run this command. Then deploy the metadata
  using "sfdx project deploy".

  To convert Metadata API–formatted files into the source format, run "sfdx
  project convert mdapi".

  To specify a package name that includes spaces, enclose the name in single
  quotes.

  To convert multiple components, either set multiple --metadata <name> flags or
  a single --metadata flag with multiple names separated by spaces. Enclose
  names that contain spaces in one set of double quotes. The same syntax applies
  to --manifest and --source-dir.

ALIASES
  $ sfdx force source convert

EXAMPLES
  Convert source-formatted files in the specified directory into
  metadata-formatted files; writes converted files into a new directory:

    $ sfdx force source convert --root-dir path/to/source

  Similar to previous example, but writes converted files to the specified
  output directory and associates the files with the specified package:

    $ sfdx force source convert --root-dir path/to/source --output-dir \
      path/to/outputdir --package-name 'My Package'

FLAG DESCRIPTIONS
  -p, --source-dir=<value>...  Paths to the local source files to convert.

    The supplied paths can be to a single file (in which case the operation is
    applied to only one file) or to a folder (in which case the operation is
    applied to all metadata types in the directory and its sub-directories).

    If you specify this parameter, don’t specify --manifest or --metadata.

  -x, --manifest=<value>

    Path to the manifest (package.xml) file that specifies the metadata types to
    convert.

    If you specify this parameter, don’t specify --metadata or --source-dir.

  --api-version=<value>

    API Version to use in the generated project's manifest. By default, will use
    the version from sfdx-project.json

    Override the api version used for api requests made by this command




Log in to a Salesforce org using the web server flow.

USAGE
  $ sfdx org login web [--json] [-b chrome|edge|firefox] [-i <value>] [-r
    <value>] [-d] [-s] [-a <value>]

FLAGS
  -a, --alias=<value>         Alias for the org.
  -b, --browser=<option>      Browser in which to open the org.
                              <options: chrome|edge|firefox>
  -d, --set-default-dev-hub   Set the authenticated org as the default Dev Hub.
  -i, --client-id=<value>     OAuth client ID (also called consumer key) of your
                              custom connected app.
  -r, --instance-url=<value>  URL of the instance that the org lives on.
  -s, --set-default           Set the authenticated org as the default that all
                              org-related commands run against.

GLOBAL FLAGS
  --json  Format output as json.

DESCRIPTION
  Log in to a Salesforce org using the web server flow.

  Opens a Salesforce instance URL in a web browser so you can enter your
  credentials and log in to your org. After you log in, you can close the
  browser window.

  Logging into an org authorizes the CLI to run other commands that connect to
  that org, such as deploying or retrieving metadata. You can log into many
  types of orgs, such as sandboxes, Dev Hubs, Env Hubs, production orgs, and
  scratch orgs.

  We recommend that you set an alias when you log into an org. Aliases make it
  easy to later reference this org when running commands that require it. If you
  don’t set an alias, you use the username that you specified when you logged in
  to the org. If you run multiple commands that reference the same org, consider
  setting the org as your default. Use --set-default for your default scratch
  org or sandbox, or --set-default-dev-hub for your default Dev Hub.

  By default, this command uses the global out-of-the-box connected app in your
  org. If you need more security or control, such as setting the refresh token
  timeout or specifying IP ranges, create your own connected app using a digital
  certificate. Make note of the consumer key (also called cliend id) that’s
  generated for you. Then specify the consumer key with the --client-id flag.

ALIASES
  $ sfdx force auth web login
  $ sfdx auth web login

EXAMPLES
  Run the command with no flags to open the default Salesforce login page
  (https://login.salesforce.com):

    $ sfdx org login web

  Log in to your Dev Hub, set it as your default Dev Hub, and set an alias
  that you reference later when you create a scratch org:

    $ sfdx org login web --set-default-dev-hub --alias dev-hub

  Log in to a sandbox and set it as your default org:

    $ sfdx org login web --instance-url \
      https://MyDomainName--SandboxName.sandbox.my.salesforce.com \
      --set-default

  Use --browser to specify a specific browser, such as Google Chrome:

    $ sfdx org login web --instance-url \
      https://MyDomainName--SandboxName.sandbox.my.salesforce.com \
      --set-default --browser chrome

  Use your own connected app by specifying its consumer key (also called
  client ID):

    $ sfdx org login web --instance-url \
      https://MyDomainName--SandboxName.sandbox.my.salesforce.com \
      --set-default --browser chrome --client-id 04580y4051234051

FLAG DESCRIPTIONS
  -b, --browser=chrome|edge|firefox  Browser in which to open the org.

    If you don’t specify --browser, the command uses your default browser. The
    exact names of the browser applications differ depending on the operating
    system you're on; check your documentation for details.

  -r, --instance-url=<value>  URL of the instance that the org lives on.

    If you specify an --instance-url value, this value overrides the
    sfdcLoginUrl value in your sfdx-project.json file.

    To specify a My Domain URL, use the format
    https://yourcompanyname.my.salesforce.com.

    To specify a sandbox, set --instance-url to
    https://MyDomainName--SandboxName.sandbox.my.salesforce.com




Delete source from your project and from a non-source-tracked org.

USAGE
  $ sfdx project delete source -o <value> [--json] [--api-version <value>] [-w
    <value>] [-l NoTestRun|RunLocalTests|RunAllTestsInOrg] [-r] [-m <value>] [-p
    <value>] [-f [-t | -c]] [--verbose]

FLAGS
  -c, --check-only             Validate delete command but don't delete anything
                               from the org or the local project.
  -f, --force-overwrite        Ignore conflict warnings and overwrite changes to
                               the org.
  -l, --test-level=<option>    Deployment Apex testing level.
                               <options:
                               NoTestRun|RunLocalTests|RunAllTestsInOrg>
  -m, --metadata=<value>...    Metadata components to delete.
  -o, --target-org=<value>     (required) Username or alias of the target org.
  -p, --source-dir=<value>...  Source file paths to delete.
  -r, --no-prompt              Don't prompt for delete confirmation.
  -t, --track-source           If the delete succeeds, update the source
                               tracking information.
  -w, --wait=<value>           [default: 33 minutes] Number of minutes to wait
                               for the command to finish.
  --api-version=<value>        Override the api version used for api requests
                               made by this command
  --verbose                    Verbose output of the delete result.

GLOBAL FLAGS
  --json  Format output as json.

DESCRIPTION
  Delete source from your project and from a non-source-tracked org.

  Use this command to delete components from orgs that don’t have source
  tracking. To remove deleted items from orgs that have source tracking enabled,
  "sfdx project deploy start".

  When you run this command, both the local source file and the metadata
  component in the org are deleted.

  To delete multiple metadata components, either set multiple --metadata <name>
  flags or a single --metadata flag with multiple names separated by spaces.
  Enclose names that contain spaces in one set of double quotes. The same syntax
  applies to --manifest and --source-dir.

ALIASES
  $ sfdx force source delete

EXAMPLES
  Delete all local Apex source files and all Apex classes from the org with
  alias "my-scratch":

    $ sfdx project delete source --metadata ApexClass --target-org \
      my-scratch

  Delete a specific Apex class and a Profile that has a space in it from your
  default org; don't prompt for confirmation:

    $ sfdx project delete source --metadata ApexClass:MyFabulousApexClass \
      --metadata "Profile: My Profile" --no-prompt

  Run the tests that aren’t in any managed packages as part of the deletion;
  if the delete succeeds, and the org has source-tracking enabled, update the
  source tracking information:

    $ sfdx project delete source --metadata ApexClass --test-level \
      RunLocalTests --track-source

  Delete the Apex source files in a directory and the corresponding components
  from your default org:

    $ sfdx project delete source --source-dir force-app/main/default/classes

FLAG DESCRIPTIONS
  -c, --check-only

    Validate delete command but don't delete anything from the org or the local
    project.

    IMPORTANT: Where possible, we changed noninclusive terms to align with our
    company value of Equality. We maintained certain terms to avoid any effect
    on customer implementations.

    Validates the deleted metadata and runs all Apex tests, but prevents the
    deletion from being saved to the org.

    If you change a field type from Master-Detail to Lookup or vice versa, that
    change isn’t supported when using the --chec-konly parameter to test a
    deletion (validation). This kind of change isn’t supported for test
    deletions to avoid the risk of data loss or corruption. If a change that
    isn’t supported for test deletions is included in a deletion package, the
    test deletion fails and issues an error.

    If your deletion package changes a field type from Master-Detail to Lookup
    or vice versa, you can still validate the changes prior to deploying to
    Production by performing a full deletion to another test Sandbox. A full
    deletion includes a validation of the changes as part of the deletion
    process.

    Note: A Metadata API deletion that includes Master-Detail relationships
    deletes all detail records in the Recycle Bin in the following cases.

    1. For a deletion with a new Master-Detail field, soft delete (send to the
    Recycle Bin) all detail records before proceeding to delete the
    Master-Detail field, or the deletion fails. During the deletion, detail
    records are permanently deleted from the Recycle Bin and cannot be
    recovered.

    2. For a deletion that converts a Lookup field relationship to a
    Master-Detail relationship, detail records must reference a master record or
    be soft-deleted (sent to the Recycle Bin) for the deletion to succeed.
    However, a successful deletion permanently deletes any detail records in the
    Recycle Bin.

  -l, --test-level=NoTestRun|RunLocalTests|RunAllTestsInOrg

    Deployment Apex testing level.

    Valid values are:

    - NoTestRun — No tests are run. This test level applies only to deployments
    to development environments, such as sandbox, Developer Edition, or trial
    orgs. This test level is the default for development environments.
    - RunLocalTests — All tests in your org are run, except the ones that
    originate from installed managed and unlocked packages. This test level is
    the default for production deployments that include Apex classes or
    triggers.
    - RunAllTestsInOrg — All tests in your org are run, including tests of
    managed packages.

    If you don’t specify a test level, the default behavior depends on the
    contents of your deployment package and target org. For more information,
    see “Running Tests in a Deployment” in the Metadata API Developer Guide.

  -m, --metadata=<value>...  Metadata components to delete.

    If you specify this parameter, don’t specify --source-dir.

  -p, --source-dir=<value>...  Source file paths to delete.

    The supplied paths can be a single file (in which case the operation is
    applied to only one file) or a folder (in which case the operation is
    applied to all metadata types in the directory and its sub-directories).

    If you specify this parameter, don’t specify --metadata.

  -w, --wait=<value>  Number of minutes to wait for the command to finish.

    If the command continues to run after the wait period, the CLI returns
    control of the terminal window to you


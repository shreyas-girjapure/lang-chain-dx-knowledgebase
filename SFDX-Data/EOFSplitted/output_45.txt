

Execute a SOQL query.

USAGE
  $ sfdx data query -o <value> [--json] [--api-version <value>] [-q
    <value>] [-f <value>] [-w <value> [-b | -t]] [--async ] [-r human|json|csv]

FLAGS
  -b, --bulk                    Use Bulk API 2.0 to run the query.
  -f, --file=<value>            File that contains the SOQL query.
  -o, --target-org=<value>      (required) Org alias or username to use for the
                                target org.
  -q, --query=<value>           SOQL query to execute.
  -r, --result-format=<option>  [default: human] Format to display the results;
                                the --json flag overrides this flag.
                                <options: human|json|csv>
  -t, --use-tooling-api         Use Tooling API so you can run queries on
                                Tooling API objects.
  -w, --wait=<value>            Time to wait for the command to finish, in
                                minutes.
  --api-version=<value>         Override the api version used for api requests
                                made by this command
  --async                       Use Bulk API 2.0, but don't wait for the job to
                                complete.

GLOBAL FLAGS
  --json  Format output as json.

DESCRIPTION
  Execute a SOQL query.

  Specify the SOQL query at the command line with the --query flag or read the
  query from a file with the --file flag.

  If your query returns more than 10,000 records, specify the --bulk flag. The
  command then runs the query using Bulk API 2.0, which has higher limits than
  the default API used by the command.

  When using --bulk, the command waits 3 minutes by default for the query to
  complete. Use the --wait parameter to specify a different number of minutes to
  wait, or set --wait to 0 to immediately return control to the terminal. If you
  set --wait to 0, or you use the --async flag, or the command simply times out,
  the command displays an ID. Pass this ID to the the "data query resume"
  command using the --bulk-query-id flag to get the results; pass the ID to the
  "data resume" command to get the job status.

ALIASES
  $ sfdx force data soql query

EXAMPLES
  Specify a SOQL query at the command line; the command uses your default org:

    $ sfdx data query --query "SELECT Id, Name, Account.Name FROM Contact"

  Read the SOQL query from a file called "query.txt"; the command uses the org
  with alias "my-scratch":

    $ sfdx data query --file query.txt --target-org my-scratch

  Use Tooling API to run a query on the ApexTrigger Tooling API object:

    $ sfdx data query --query "SELECT Name FROM ApexTrigger" \
      --use-tooling-api

  Use Bulk API 2.0 to run a query that returns many rows, and return control
  to the terminal immediately:

    $ sfdx data query --query "SELECT Id FROM Contact" --bulk --wait 0

COMMANDS
  data query resume  View the status of a bulk query


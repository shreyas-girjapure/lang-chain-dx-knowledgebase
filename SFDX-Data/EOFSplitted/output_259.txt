

Authorize an org using a Salesforce DX authorization URL stored in a file.

USAGE
  $ sfdx org login sfdx-url -f <value> [--json] [-d] [-s] [-a <value>]

FLAGS
  -a, --alias=<value>          Alias for the org.
  -d, --set-default-dev-hub    Set the authenticated org as the default Dev Hub.
  -f, --sfdx-url-file=<value>  (required) Path to a file that contains the
                               Salesforce DX authorization URL.
  -s, --set-default            Set the authenticated org as the default that all
                               org-related commands run against.

GLOBAL FLAGS
  --json  Format output as json.

DESCRIPTION
  Authorize an org using a Salesforce DX authorization URL stored in a file.

  The Salesforce DX (SFDX) authorization URL must have the format
  "force://<clientId>:<clientSecret>:<refreshToken>@<instanceUrl>". NOTE: The
  SFDX authorization URL uses the "force" protocol, and not "http" or "https".
  Also, the "instanceUrl" inside the SFDX authorization URL doesn't include the
  protocol ("https://").

  You have three options when creating the authorization file. The easiest
  option is to redirect the output of the "sfdx org display --verbose --json"
  command into a file. For example, using an org with alias my-org that you've
  already authorized:

  $ sfdx org display --target-org my-org --verbose --json > authFile.json

  The resulting JSON file contains the URL in the "sfdxAuthUrl" property of the
  "result" object. You can then reference the file when running this command:

  $ sfdx org login sfdx-url --sfdx-url-file authFile.json

  NOTE: The "sfdx org display --verbose" command displays the refresh token only
  for orgs authorized with the web server flow, and not the JWT bearer flow.

  You can also create a JSON file that has a top-level property named
  sfdxAuthUrl whose value is the authorization URL. Finally, you can create a
  normal text file that includes just the URL and nothing else.

ALIASES
  $ sfdx force auth sfdxurl store
  $ sfdx auth sfdxurl store

EXAMPLES
  Authorize an org using the SFDX authorization URL in the files/authFile.json
  file:

    $ sfdx org login sfdx-url --sfdx-url-file files/authFile.json

  Similar to previous example, but set the org as your default and give it an
  alias MyDefaultOrg:

    $ sfdx org login sfdx-url --sfdx-url-file files/authFile.json \
      --set-default --alias MyDefaultOrg




Gather CLI configuration data and run diagnostic tests to discover and report potential problems in your environment.

USAGE
  $ sfdx doctor [--json] [-c <value>] [-p <value>] [-d <value>] [-i]

FLAGS
  -c, --command=<value>     Command to run in debug mode; results are written to
                            a log file.
  -d, --output-dir=<value>  Directory to save all created files rather than the
                            current working directory.
  -i, --create-issue        Create a new issue on our GitHub repo and attach all
                            diagnostic results.
  -p, --plugin=<value>      Specific plugin on which to run diagnostics.

GLOBAL FLAGS
  --json  Format output as json.

DESCRIPTION
  Gather CLI configuration data and run diagnostic tests to discover and report
  potential problems in your environment.

  When you run the doctor command without parameters, it first displays a
  diagnostic overview of your environment. It then writes a detailed diagnosis
  to a JSON file in the current directory. Use the --outputdir to specify a
  different directory. To run diagnostic tests on a specific plugin, use the
  --plugin parameter. If the plugin isn't listening to the doctor, then you get
  a warning.

  Use the --command parameter to run a specific command in debug mode; the
  doctor writes both stdout and stderr to \*.log files that you can provide to
  Salesforce Customer Support or attach to a GitHub issue.

  Plugin providers can also implement their own doctor diagnostic tests by
  listening to the "sf-doctor" event and running plugin specific tests that are
  then included in the doctor diagnostics log.

EXAMPLES
  Run CLI doctor diagnostics:

    $ sfdx doctor

  Run CLI doctor diagnostics and the specified command, and write the debug
  output to a file:

    $ sfdx doctor --command "force:org:list --all"

  Run CLI doctor diagnostics for a specific plugin:

    $ sfdx doctor --plugin @salesforce/plugin-source

